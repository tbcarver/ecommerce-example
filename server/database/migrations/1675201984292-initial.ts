import { MigrationInterface, QueryRunner } from "typeorm";

export class initial1675201984292 implements MigrationInterface {
    name = 'initial1675201984292'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "users" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar NOT NULL, "email" varchar NOT NULL, "password_hash" varchar NOT NULL, "password_plain" varchar NOT NULL, "superadmin" boolean NOT NULL, "shop_name" varchar NOT NULL, "remember_token" varchar NOT NULL, "created_at" varchar NOT NULL, "updated_at" varchar NOT NULL, "card_brand" varchar NOT NULL, "card_last_four" varchar NOT NULL, "trial_ends_at" varchar NOT NULL, "shop_domain" varchar NOT NULL, "is_enabled" boolean NOT NULL, "billing_plan" varchar NOT NULL, "trial_starts_at" datetime NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "products" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "product_name" varchar NOT NULL, "description" varchar NOT NULL, "style" varchar NOT NULL, "brand" varchar NOT NULL, "url" varchar NOT NULL, "product_type" varchar NOT NULL, "shipping_price" integer NOT NULL, "note" varchar NOT NULL, "admin_id" integer NOT NULL, "created_at" varchar NOT NULL, "updated_at" varchar NOT NULL, "user_id" integer)`);
        await queryRunner.query(`CREATE TABLE "inventory_items" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "quantity" integer NOT NULL, "color" varchar NOT NULL, "size" varchar NOT NULL, "weight" integer NOT NULL, "price_cents" integer NOT NULL, "sale_price_cents" integer NOT NULL, "cost_cents" integer NOT NULL, "sku" varchar NOT NULL, "length" integer NOT NULL, "width" integer NOT NULL, "height" integer NOT NULL, "note" varchar NOT NULL, "product_id" integer)`);
        await queryRunner.query(`CREATE TABLE "orders" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "street_address" varchar NOT NULL, "apartment" varchar NOT NULL, "city" varchar NOT NULL, "state" varchar NOT NULL, "country_code" varchar NOT NULL, "zip" integer NOT NULL, "phone_number" varchar NOT NULL, "email" varchar NOT NULL, "name" varchar NOT NULL, "order_status" varchar NOT NULL, "payment_ref" varchar NOT NULL, "transaction_id" varchar NOT NULL, "payment_amt_cents" integer NOT NULL, "ship_charged_cents" integer NOT NULL, "ship_cost_cents" integer NOT NULL, "subtotal_cents" integer NOT NULL, "total_cents" integer NOT NULL, "shipper_name" varchar NOT NULL, "payment_date" varchar NOT NULL, "shipped_date" varchar NOT NULL, "tracking_number" varchar NOT NULL, "tax_total_cents" integer NOT NULL, "created_at" varchar NOT NULL, "updated_at" varchar NOT NULL, "product_id" integer, "inventory_item_id" integer)`);
        await queryRunner.query(`CREATE TABLE "temporary_products" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "product_name" varchar NOT NULL, "description" varchar NOT NULL, "style" varchar NOT NULL, "brand" varchar NOT NULL, "url" varchar NOT NULL, "product_type" varchar NOT NULL, "shipping_price" integer NOT NULL, "note" varchar NOT NULL, "admin_id" integer NOT NULL, "created_at" varchar NOT NULL, "updated_at" varchar NOT NULL, "user_id" integer, CONSTRAINT "FK_176b502c5ebd6e72cafbd9d6f70" FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_products"("id", "product_name", "description", "style", "brand", "url", "product_type", "shipping_price", "note", "admin_id", "created_at", "updated_at", "user_id") SELECT "id", "product_name", "description", "style", "brand", "url", "product_type", "shipping_price", "note", "admin_id", "created_at", "updated_at", "user_id" FROM "products"`);
        await queryRunner.query(`DROP TABLE "products"`);
        await queryRunner.query(`ALTER TABLE "temporary_products" RENAME TO "products"`);
        await queryRunner.query(`CREATE TABLE "temporary_inventory_items" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "quantity" integer NOT NULL, "color" varchar NOT NULL, "size" varchar NOT NULL, "weight" integer NOT NULL, "price_cents" integer NOT NULL, "sale_price_cents" integer NOT NULL, "cost_cents" integer NOT NULL, "sku" varchar NOT NULL, "length" integer NOT NULL, "width" integer NOT NULL, "height" integer NOT NULL, "note" varchar NOT NULL, "product_id" integer, CONSTRAINT "FK_8e17955a29e8b63bb8cec3d32c5" FOREIGN KEY ("product_id") REFERENCES "products" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_inventory_items"("id", "quantity", "color", "size", "weight", "price_cents", "sale_price_cents", "cost_cents", "sku", "length", "width", "height", "note", "product_id") SELECT "id", "quantity", "color", "size", "weight", "price_cents", "sale_price_cents", "cost_cents", "sku", "length", "width", "height", "note", "product_id" FROM "inventory_items"`);
        await queryRunner.query(`DROP TABLE "inventory_items"`);
        await queryRunner.query(`ALTER TABLE "temporary_inventory_items" RENAME TO "inventory_items"`);
        await queryRunner.query(`CREATE TABLE "temporary_orders" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "street_address" varchar NOT NULL, "apartment" varchar NOT NULL, "city" varchar NOT NULL, "state" varchar NOT NULL, "country_code" varchar NOT NULL, "zip" integer NOT NULL, "phone_number" varchar NOT NULL, "email" varchar NOT NULL, "name" varchar NOT NULL, "order_status" varchar NOT NULL, "payment_ref" varchar NOT NULL, "transaction_id" varchar NOT NULL, "payment_amt_cents" integer NOT NULL, "ship_charged_cents" integer NOT NULL, "ship_cost_cents" integer NOT NULL, "subtotal_cents" integer NOT NULL, "total_cents" integer NOT NULL, "shipper_name" varchar NOT NULL, "payment_date" varchar NOT NULL, "shipped_date" varchar NOT NULL, "tracking_number" varchar NOT NULL, "tax_total_cents" integer NOT NULL, "created_at" varchar NOT NULL, "updated_at" varchar NOT NULL, "product_id" integer, "inventory_item_id" integer, CONSTRAINT "FK_ac832121b6c331b084ecc4121fd" FOREIGN KEY ("product_id") REFERENCES "products" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_a6378e854f8d9f56284202db7af" FOREIGN KEY ("inventory_item_id") REFERENCES "inventory_items" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_orders"("id", "street_address", "apartment", "city", "state", "country_code", "zip", "phone_number", "email", "name", "order_status", "payment_ref", "transaction_id", "payment_amt_cents", "ship_charged_cents", "ship_cost_cents", "subtotal_cents", "total_cents", "shipper_name", "payment_date", "shipped_date", "tracking_number", "tax_total_cents", "created_at", "updated_at", "product_id", "inventory_item_id") SELECT "id", "street_address", "apartment", "city", "state", "country_code", "zip", "phone_number", "email", "name", "order_status", "payment_ref", "transaction_id", "payment_amt_cents", "ship_charged_cents", "ship_cost_cents", "subtotal_cents", "total_cents", "shipper_name", "payment_date", "shipped_date", "tracking_number", "tax_total_cents", "created_at", "updated_at", "product_id", "inventory_item_id" FROM "orders"`);
        await queryRunner.query(`DROP TABLE "orders"`);
        await queryRunner.query(`ALTER TABLE "temporary_orders" RENAME TO "orders"`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "orders" RENAME TO "temporary_orders"`);
        await queryRunner.query(`CREATE TABLE "orders" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "street_address" varchar NOT NULL, "apartment" varchar NOT NULL, "city" varchar NOT NULL, "state" varchar NOT NULL, "country_code" varchar NOT NULL, "zip" integer NOT NULL, "phone_number" varchar NOT NULL, "email" varchar NOT NULL, "name" varchar NOT NULL, "order_status" varchar NOT NULL, "payment_ref" varchar NOT NULL, "transaction_id" varchar NOT NULL, "payment_amt_cents" integer NOT NULL, "ship_charged_cents" integer NOT NULL, "ship_cost_cents" integer NOT NULL, "subtotal_cents" integer NOT NULL, "total_cents" integer NOT NULL, "shipper_name" varchar NOT NULL, "payment_date" varchar NOT NULL, "shipped_date" varchar NOT NULL, "tracking_number" varchar NOT NULL, "tax_total_cents" integer NOT NULL, "created_at" varchar NOT NULL, "updated_at" varchar NOT NULL, "product_id" integer, "inventory_item_id" integer)`);
        await queryRunner.query(`INSERT INTO "orders"("id", "street_address", "apartment", "city", "state", "country_code", "zip", "phone_number", "email", "name", "order_status", "payment_ref", "transaction_id", "payment_amt_cents", "ship_charged_cents", "ship_cost_cents", "subtotal_cents", "total_cents", "shipper_name", "payment_date", "shipped_date", "tracking_number", "tax_total_cents", "created_at", "updated_at", "product_id", "inventory_item_id") SELECT "id", "street_address", "apartment", "city", "state", "country_code", "zip", "phone_number", "email", "name", "order_status", "payment_ref", "transaction_id", "payment_amt_cents", "ship_charged_cents", "ship_cost_cents", "subtotal_cents", "total_cents", "shipper_name", "payment_date", "shipped_date", "tracking_number", "tax_total_cents", "created_at", "updated_at", "product_id", "inventory_item_id" FROM "temporary_orders"`);
        await queryRunner.query(`DROP TABLE "temporary_orders"`);
        await queryRunner.query(`ALTER TABLE "inventory_items" RENAME TO "temporary_inventory_items"`);
        await queryRunner.query(`CREATE TABLE "inventory_items" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "quantity" integer NOT NULL, "color" varchar NOT NULL, "size" varchar NOT NULL, "weight" integer NOT NULL, "price_cents" integer NOT NULL, "sale_price_cents" integer NOT NULL, "cost_cents" integer NOT NULL, "sku" varchar NOT NULL, "length" integer NOT NULL, "width" integer NOT NULL, "height" integer NOT NULL, "note" varchar NOT NULL, "product_id" integer)`);
        await queryRunner.query(`INSERT INTO "inventory_items"("id", "quantity", "color", "size", "weight", "price_cents", "sale_price_cents", "cost_cents", "sku", "length", "width", "height", "note", "product_id") SELECT "id", "quantity", "color", "size", "weight", "price_cents", "sale_price_cents", "cost_cents", "sku", "length", "width", "height", "note", "product_id" FROM "temporary_inventory_items"`);
        await queryRunner.query(`DROP TABLE "temporary_inventory_items"`);
        await queryRunner.query(`ALTER TABLE "products" RENAME TO "temporary_products"`);
        await queryRunner.query(`CREATE TABLE "products" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "product_name" varchar NOT NULL, "description" varchar NOT NULL, "style" varchar NOT NULL, "brand" varchar NOT NULL, "url" varchar NOT NULL, "product_type" varchar NOT NULL, "shipping_price" integer NOT NULL, "note" varchar NOT NULL, "admin_id" integer NOT NULL, "created_at" varchar NOT NULL, "updated_at" varchar NOT NULL, "user_id" integer)`);
        await queryRunner.query(`INSERT INTO "products"("id", "product_name", "description", "style", "brand", "url", "product_type", "shipping_price", "note", "admin_id", "created_at", "updated_at", "user_id") SELECT "id", "product_name", "description", "style", "brand", "url", "product_type", "shipping_price", "note", "admin_id", "created_at", "updated_at", "user_id" FROM "temporary_products"`);
        await queryRunner.query(`DROP TABLE "temporary_products"`);
        await queryRunner.query(`DROP TABLE "orders"`);
        await queryRunner.query(`DROP TABLE "inventory_items"`);
        await queryRunner.query(`DROP TABLE "products"`);
        await queryRunner.query(`DROP TABLE "users"`);
    }

}
